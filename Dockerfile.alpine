FROM python:3.9-alpine

LABEL maintainer="admin@anynines.com"
LABEL description="Facerecognition using (Darknet) Yolo Weights."

RUN mkdir /workdir
WORKDIR /workdir

ENV TZ=Europe/Berlin
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

COPY yolo_opencv.py /workdir/yolo_opencv.py
COPY yolov3.cfg /workdir/yolov3.cfg
COPY yolov3.txt  /workdir/yolov3.txt 
COPY yolov3.weights /workdir/yolov3.weights
COPY dog.jpg /tmp/original-image.jpg

# see: https://github.com/aws/aws-lambda-python-runtime-interface-client/issues/144
RUN echo https://dl-cdn.alpinelinux.org/alpine/v3.19/main >> /etc/apk/repositories
RUN echo https://dl-cdn.alpinelinux.org/alpine/v3.19/community >> /etc/apk/repositories

RUN apk add --no-cache --update autoconf=2.71-r2 automake build-base cmake libcurl libtool linux-headers make py3-numpy-pyc py3-opencv-pyc
RUN apk add --no-cache --update --repository=https://dl-cdn.alpinelinux.org/alpine/v3.16/main/ libexecinfo-dev

# see: https://docs.aws.amazon.com/lambda/latest/dg/python-image.html
# RUN python3 -m venv /workdir/venv
# RUN /workdir/venv/bin/pip install awslambdaric opencv-python
RUN pip3 install --verbose --no-cache-dir awslambdaric opencv-python

# Recommended CMD
# cd object-detection-opencv && python3 yolo_opencv.py --image /tmp/original-image.jpg --config yolov3.cfg --weights ../yolov3.weights --classes yolov3.txt 

CMD ["/bin/sh"]
